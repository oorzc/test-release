{"version":3,"sources":["component/background/bg.jpeg","component/header/albird.svg","component/background/index.js","component/header/index.js","component/footer/index.js","component/start/index.js","redux/actions/_actions.js","model/Participant.js","_data/mockParticipants.js","component/lottery-pool/index.js","redux/actions/lotteryPool.jsx","service/DrawService.js","utils/phone_mask.js","component/common/tag-cloud/index.js","component/lottery-drawing/index.js","component/lottery-edit/lottery-editable-table.js","redux/actions/lotteryDrawing.jsx","component/lottery-edit/index.js","component/lottery-setting/index.js","component/activity-setting/index.js","redux/actions/activitySetting.jsx","component/result/index.js","redux/reducers/lotteryPool.jsx","redux/reducers/activitySetting.jsx","redux/reducers/lotteryDrawing.jsx","redux/reducers/index.jsx","redux/store/index.jsx","app/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","Background","className","this","props","showBackground","params","style","position","background","backgroundImage","logo","backgroundSize","pointerEvents","children","Component","Header","activityName","connect","state","dataReducer","activitySetting","name","Footer","Date","getFullYear","target","href","Start","to","Participant","phone","str","array","split","test","Error","participant","participants","LotteryPool","next","history","push","verifyParticipantsInput","Promise","resolve","reject","filter","item","replace","length","map","fromString","err","onTextChange","setState","allParticipantsInput","verifyParticipants","saveNameList","then","allParticipants","setLotteryPool","catch","error","loadDemoData","mockParticipants","participantToString","join","icon","faQuestionCircle","onClick","id","multiple","required","placeholder","onChange","event","outlineColor","validParticipantCount","disabled","message","lotteryPool","Action","DrawService","noDuplicate","isRolling","isPickBlocked","clearInterval","timer","all","setInterval","change","bind","oneItemIndex","splice","index","Math","floor","currentlySelectedIndex","currentlySelectedItem","onSelectedChangedCallback","callback","onPickBlockedChangedCallback","blocked","setPickBlocked","setTimeout","removeItem","instance","symbol","substr","class","$","window","TagCloud","settings","entries","tags","slice","tag","label","radius","radiusMin","bgDraw","opacityOver","opacityOut","opacitySpeed","fov","fontFamily","fontSize","fontColor","fontWeight","fontStyle","fontStretch","fontToUpperCase","$el","el","svg3DTagCloud","ref","React","LotteryDrawing","noPrize","isPrizeChanged","computeCurrentPrize","drawService","pickOneThenDo","selected","prize","currentPrize","addWinner","rollUp","console","getCurrentPrize","items","winners","winner","totalCount","lotteryDrawing","setting","find","lottery","existingCountOfCurrentPrize","getTitle","title","getContent","selectedParticipant","maskPhone","getButton","btnDisabled","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","totalLotteryCount","reduce","sum","l","alert","goBack","launchFullscreen","document","documentElement","from","setOnSelectedChangedCallback","selectedItem","setNoDuplicate","setOnPickBlockedChangedCallback","uuidv4","require","DragHandle","SortableHandle","faBars","SortableList","SortableContainer","onItemChange","SortableItem","SortableElement","sortIndex","key","defaultValue","onBlur","e","parseInt","faTrashAlt","LotteryEditableItem","onSortEnd","oldIndex","newIndex","setLottery","arrayMove","lotteries","nextProps","lotteryItemBodyRef","scrollTo","scrollHeight","useDragHandle","Object","assign","faPlusCircle","LotteryEdit","LotterySetting","ActivitySetting","onNameChange","setActivityName","Result","winnerList","winnerGroups","reverse","winnerGroup","prizeName","forEach","findIndex","action","initialState","combineReducers","composeEnhancers","composeWithDevTools","getStore","recoverFromStorage","createStore","serializedState","localStorage","getItem","JSON","parse","loadState","undefined","applyMiddleware","logger","App","saveState","stringify","setItem","confirmRecovered","confirm","store","subscribe","onbeforeunload","getState","Provider","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3fac6d3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.622bb7a1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/albird.aab060a4.svg\";","import React, { Component } from 'react';\nimport Particles from 'react-particles-js'\nimport logo from './bg.jpeg';\nimport './background.css';\nconst particles = {\n    number: {\n      value: 100,\n      density: {\n        enable: false,\n        value_area: 3200\n      }\n    },\n    color: {\n      value: \"#0FF\"\n    },\n    shape: {\n      type: \"circle\",\n      stroke: {\n        width: 0,\n        color: \"#000000\"\n      },\n      polygon: {\n        nb_sides: 5\n      },\n      image: {\n        src: \"\",\n        width: 100,\n        height: 100\n      }\n    },\n    opacity: {\n      value: 1,\n      random: true,\n      anim: {\n        enable: 1,\n        speed: 10,\n        opacity_min: .5,\n        sync: !1\n      }\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        enable: !1,\n        speed: 20,\n        size_min: 1,\n        sync: true\n      }\n    },\n    line_linked: {\n      enable: !0,\n      distance: 120,\n      color: \"#FF0\",\n      opacity: .6,\n      width: 1,\n    },\n  };\nclass Background extends Component {\n  render() {\n    return (\n      <div className={'particles background'}>\n        { this.props.showBackground && <Particles\n          params={{\n            particles,\n          }}\n          style={{\n            position: 'fixed',\n            width: '100%',\n            height: '100%',\n            background: '#1a1a1a',\n            backgroundImage: `url(${logo})`,\n            backgroundSize: 'cover',\n            pointerEvents: 'none',\n          }}\n        /> }\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Background;\n","import React, { Component } from 'react';\nimport logo from './albird.svg'\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  render() {\n    return (\n     <header className={this.props.className}>\n       <img width={24}  height={24} src={logo}/>\n       <span>{this.props.activityName}</span>\n     </header>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  activityName: state.dataReducer.activitySetting.name,\n});\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\n\nconst Footer = (props) => (\n      <footer className={props.className}>\n        ©{new Date().getFullYear()}\n        <span> <a target='_blank' href='http://wangbaiyuan.cn'>Baiyuan Wang</a> </span>\n        All Rights Reversed.\n        <span>  <a target='_blank' href='https://github.com/geekeren/Magpie-LuckyDraw'>Github</a> </span>\n      </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport {\n  Link\n} from 'react-router-dom'\nimport './start.css';\n\nclass Start extends Component {\n  render() {\n    return (\n      <div><Link to=\"/activity-setting\" className=\"creat_new_activity\">创建一个抽奖活动</Link></div>\n    );\n  }\n}\n\nexport default Start;\n","export default {\n  SET_LOTTERY_POOL: 'SET_LOTTERY_POOL',\n  ADD_WINNER: 'ADD_WINNER',\n  SET_ACTIVITY_NAME: 'SET_ACTIVITY_NAME',\n  SET_LOTTERY_SETTING: 'SET_LOTTERY_SETTING'\n}","export default class Participant {\n  constructor( name, phone) {\n    this.name = name;\n    this.phone = phone;\n  }\n  static fromString(str) {\n    const array = str.split(/\\t+|\\s+/, 2);\n    if(array[0] && array[1]) {\n      if (!(/^[1][3-9][0-9]{9}$/.test(array[1]))) {\n        throw new Error(`'${array[0]}'的手机号有误: 请输入11位数字`);\n      }\n      return new Participant(array[0], array[1]);\n    }\n    throw new Error(`'${str}' 无效: 姓名和手机号都需要`);\n  }\n  static participantToString(participant) {\n    return `${participant.name}\\t${participant.phone}`;\n  }\n  toString() {\n    return `${this.name}\\t${this.phone}`;\n  }\n}","const participants =\n`杨幂\t13110000000\n李易峰\t13110000001\n李宇春\t13110000002\n张靓颖\t13110000003\n周笔畅\t13110000004\n韩雪\t13110000005\n范冰冰\t13110000006\n赵薇\t13110000007\n马苏\t13110000008\n李小璐\t13110000009\n刘涛\t13110000010\n林依晨\t13110000011\n陈乔恩\t13110000012\n容祖儿\t13110000013\n林心如\t13110000014\n`;\n\nexport default participants;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from 'react-redux';\nimport { setLotteryPool } from '../../redux/actions/lotteryPool';\nimport Participant from \"../../model/Participant\";\nimport mockParticipants from \"../../_data/mockParticipants\";\nimport './lottery-pool.css'\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nclass LotteryPool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.allParticipants && props.allParticipants.length > 0 ? '' : '抽奖池为空！',\n      allParticipantsInput: this.props.allParticipants.map(participant => Participant.participantToString(participant)).join(\"\\n\")\n    }\n  }\n\n  componentDidMount() {\n    this.verifyParticipants();\n  }\n\n  render() {\n    return (\n      <div className=\"lottery-pool\">\n        <header>抽奖池设置</header>\n        <section>每一行表示一名参与者（格式：‘姓名 手机号’）\n          <span className={'load_demo'} >\n            <FontAwesomeIcon icon={faQuestionCircle} />\n            <a onClick={this.loadDemoData}>加载示例数据</a>\n          </span>\n        </section>\n        <div id=\"input_container\">\n          <textarea\n            id=\"nameList\"\n            type=\"text\"\n            multiple\n            required\n            placeholder=\"郭晓 13800138000\"\n            value={this.state.allParticipantsInput}\n            onChange={(event) => this.onTextChange(event.target.value)}\n            style={{ outlineColor: this.state.error ? '#ff5417' : '#50c617' }}\n          />\n          <div className={'notice_msg'}>\n            {this.state.error && <span className={'err_msg'}>{this.state.error}</span>}\n            {this.state.validParticipantCount &&\n            <div>参与者总数：{this.state.validParticipantCount}</div>\n            }\n          </div>\n        </div>\n        <section className={'next-btn'}>\n          <button disabled={!!this.state.error} className={!!this.state.error ? \"disable\" : ''}\n                  onClick={this.saveNameList}>NEXT\n          </button>\n        </section>\n      </div>\n    );\n  }\n\n  next = () => {\n    this.props.history.push(\"/lottery-setting\");\n  };\n\n  verifyParticipantsInput = (value) => {\n    return new Promise((resolve, reject) => {\n      try {\n        const allParticipants = value.split(\"\\n\")\n          .filter(item => !!item || item.replace(/(^s*)|(s*$)/g, \"\").length !== 0)\n          .map(item => Participant.fromString(item));\n        resolve(allParticipants);\n      } catch (err) {\n        reject(err)\n      }\n    });\n\n  }\n  onTextChange = (value) => {\n    this.setState({\n      allParticipantsInput: value,\n    }, () => {\n      this.verifyParticipants();\n    })\n  };\n  saveNameList = () => {\n    this.verifyParticipantsInput(this.state.allParticipantsInput)\n      .then(allParticipants => {\n        this.props.setLotteryPool(allParticipants);\n        this.next();\n      })\n      .catch(error => {\n        this.setState({\n          error\n        });\n      })\n  };\n\n  loadDemoData = () => {\n    this.onTextChange(mockParticipants);\n  };\n\n  verifyParticipants() {\n    this.verifyParticipantsInput(this.state.allParticipantsInput)\n      .then((allParticipants) => {\n        if (allParticipants.length > 0) {\n          this.setState({\n            error: '',\n            validParticipantCount: allParticipants.length\n          });\n        } else {\n          this.setState({\n            error: '抽奖池为空！'\n          });\n        }\n      })\n      .catch(error => {\n        this.setState({\n          error: error.message\n        });\n      })\n  }\n}\n\nLotteryPool.propTypes = {\n  setLotteryPool: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  allParticipants: state.dataReducer.lotteryPool.allParticipants,\n});\n\nexport default connect(mapStateToProps, { setLotteryPool })(LotteryPool);\n","import Action from './_actions'\nconst setLotteryPool = allParticipants => ({\n  type: Action.SET_LOTTERY_POOL,\n  allParticipants\n});\n\nconst addWinner = winner => ({\n  type: Action.ADD_WINNER,\n  winner\n});\n\nexport {\n  setLotteryPool,\n  addWinner\n}","export default class DrawService {\n\n  static instance;\n\n  constructor() {\n    this.noDuplicate = true;\n    this.isRolling = false;\n    this.isPickBlocked = false;\n  }\n\n  static from(all) {\n    if (!DrawService.instance) {\n      DrawService.instance = new DrawService();\n    }\n    DrawService.instance.all = all;\n    return DrawService.instance;\n  }\n\n  rollUp() {\n    if (!this.isRolling) {\n      clearInterval(this.timer);\n      if (this.all.length === 0) {\n        throw new Error(\"No item in pool\");\n      }\n      this.isRolling = true;\n      this.timer = setInterval(this.change.bind(this), 80);\n    }\n    return this;\n  }\n\n  removeItem(oneItemIndex) {\n    this.all.splice(oneItemIndex, 1);\n  }\n\n  change() {\n    const index = Math.floor(Math.random() * this.all.length);\n    this.currentlySelectedIndex = index;\n    this.currentlySelectedItem = this.all[index];\n    this.onSelectedChangedCallback(this.currentlySelectedItem);\n  }\n\n  setOnSelectedChangedCallback(callback) {\n    this.onSelectedChangedCallback = callback;\n    return this;\n  }\n  setOnPickBlockedChangedCallback(callback) {\n    this.onPickBlockedChangedCallback = callback;\n    return this;\n  }\n\n  setNoDuplicate(noDuplicate = true) {\n    this.noDuplicate = noDuplicate;\n    return this;\n  }\n\n  setPickBlocked(blocked) {\n    this.isPickBlocked = blocked;\n    this.onPickBlockedChangedCallback(blocked);\n  }\n  pickOneThenDo(callback) {\n\n    if (!this.isPickBlocked) {\n      this.setPickBlocked(true);\n      setTimeout((() => {\n        clearInterval(this.timer);\n        if (this.noDuplicate) {\n          this.removeItem(this.currentlySelectedIndex);\n        }\n        callback(this.currentlySelectedItem);\n        this.isRolling = false;\n        this.setPickBlocked(false);\n      }).bind(this), 1000, this);\n    }\n  }\n}\n","import React from 'react'\nexport default (phone, symbol) => {\n  return (<div>\n          {phone.substr(0, 3)}\n          <span class='mask'>{symbol}</span>\n          {phone.substr(7, 11)}\n    </div> );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nconst $ = window.$;\n\nclass TagCloud extends React.Component {\n  componentDidMount() {\n    const displayTags = this.props.tags.length > 100 ? this.props.tags.slice(0, 100) : this.props.tags;\n    const entries = displayTags.map(tag => ({\n      label: tag\n    }));\n    const settings = {\n      entries: entries,\n      width: 1500,\n      height: 1024,\n      radius: '65%',\n      radiusMin: 75,\n      bgDraw: false,\n      opacityOver: 0.95,\n      opacityOut: 0.05,\n      opacitySpeed: 6,\n      fov: 800,\n      speed: 0.2,\n      fontFamily: 'Oswald, Arial, sans-serif',\n      fontSize: '16',\n      fontColor: '#eee',\n      fontWeight: 'normal',\n      fontStyle: 'normal',\n      fontStretch: 'normal',\n      fontToUpperCase: false\n    };\n    this.$el = $(this.el);\n    this.$el.svg3DTagCloud( settings );\n  }\n\n  render() {\n    return (\n        <div className=\"tag-cloud\" ref={el => this.el = el} />\n    );\n  }\n}\nTagCloud.propTypes = {\n  tags: PropTypes.array.isRequired,\n};\n\nexport default TagCloud;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DrawService from \"../../service/DrawService\";\nimport { addWinner } from '../../redux/actions/lotteryPool';\nimport maskPhone from '../../utils/phone_mask';\nimport { connect } from 'react-redux';\nimport TagCloud from \"../common/tag-cloud\";\nimport './lottery-drawing.css'\n\nclass LotteryDrawing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedParticipant: {},\n      currentPrize: '',\n      isPrizeChanged: false,\n      btnDisabled: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className={\"lottery-drawing\"}>\n        <div className=\"name-cloud-container\">\n          <TagCloud tags={this.props.allParticipants.map(participant => participant.name)}/>\n        </div>\n        <div>\n          <header className={'prize-title'}>\n            {this.getTitle()}\n          </header>\n          <div className={'rolling'}>\n            {this.getContent()}\n          </div>\n          <button className={this.state.btnDisabled ? \"wait\" : \"\"} disabled={this.state.btnDisabled} onClick={this.onClick.bind(this)}>{this.getButton()}</button>\n        </div>\n      </div>\n    );\n  }\n\n  onClick = () => {\n    if (this.state.noPrize) {\n      this.props.history.push(\"/result\");\n    } else {\n      if (this.state.isPrizeChanged) {\n        this.setState({\n          isPrizeChanged: false,\n        });\n        this.computeCurrentPrize();\n        return;\n      }\n      try {\n        if (this.drawService.isRolling) {\n          this.drawService.pickOneThenDo((selected) => {\n            selected.prize = this.state.currentPrize;\n            this.props.addWinner(selected);\n            this.computeCurrentPrize();\n          })\n        } else {\n          this.drawService.rollUp();\n        }\n      } catch (err) {\n        console.error(err.message)\n      }\n    }\n\n  };\n\n  getCurrentPrize = (next) => {\n    const items = this.props.lotteryPool.winners.filter(winner => (winner.prize.id === this.state.currentPrize.id));\n    if (!next && (this.state.currentPrize.totalCount - items.length || 0) >= 0 && this.state.currentPrize) {\n      if ((this.state.currentPrize.totalCount - items.length || 0) === 0) {\n        this.setState({\n          isPrizeChanged: true,\n        });\n      }\n      return this.state.currentPrize;\n    }\n\n    return this.props.lotteryDrawing.setting.find((lottery) => {\n        const items = this.props.lotteryPool.winners.filter(winner => (winner.prize.id === lottery.id));\n        if ((lottery.totalCount - items.length || 0) <= 0) {\n          return false;\n        }\n        return true\n      }\n    );\n  }\n  computeCurrentPrize = () => {\n    const currentPrize = this.getCurrentPrize(this.state.isPrizeChanged);\n    if (currentPrize) {\n      const existingCountOfCurrentPrize = this.props.lotteryPool.winners.filter(winner => winner.prize.id === currentPrize.id).length;\n      this.setState({\n        currentPrize,\n        existingCountOfCurrentPrize\n      });\n    } else {\n      this.setState({\n        noPrize: true\n      });\n    }\n    return currentPrize;\n  };\n  getTitle = () => {\n    if (this.state.existingCountOfCurrentPrize === 0 && !this.state.isPrizeChanged) {\n      return `${this.state.currentPrize.title}(${this.state.currentPrize.totalCount}名)`\n    } else if(this.state.noPrize){\n      return \"\";\n    }\n    return `${this.state.currentPrize.title}(${this.state.existingCountOfCurrentPrize} / ${this.state.currentPrize.totalCount})`\n  };\n\n  getContent = () => {\n    if (!this.state.selectedParticipant.phone || (this.state.existingCountOfCurrentPrize === 0 && !this.drawService.isRolling && !this.state.isPrizeChanged)) {\n      return \"等待开奖\";\n    } else if(this.state.noPrize){\n      return \"抽奖结束\";\n    }\n    return (<div className=\"selectedParticipant\">\n      <div className=\"name\">{this.state.selectedParticipant.name}</div>\n      <div className=\"phone\">{maskPhone(this.state.selectedParticipant.phone, '😝😝😝😝')}</div>\n    </div>)\n  };\n\n  getButton = () => {\n    if (this.state.noPrize) {\n      return \"抽奖结果\";\n    } else if (this.drawService) {\n      return this.drawService.isRolling ? \"stop\" : (this.state.isPrizeChanged ? \"next\" : \"start\")\n    }\n      return '';\n  };\n\n  launchFullscreen(element) {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n  }\n\n  componentDidMount() {\n    const totalLotteryCount = this.props.lotteryDrawing.setting.reduce((sum, l) => (sum + l.totalCount), 0);\n    if (this.props.allParticipants.length < totalLotteryCount) {\n      alert(\"奖项数大于参与者数\");\n      this.props.history.goBack();\n      return ;\n    }\n    this.launchFullscreen(document.documentElement);\n    this.drawService = DrawService.from(this.props.allParticipants)\n      .setOnSelectedChangedCallback((selectedItem) => {\n        this.setState({\n          selectedParticipant: selectedItem,\n        });\n      })\n      .setNoDuplicate(true)\n      .setOnPickBlockedChangedCallback((blocked) => {\n        this.setState({\n          btnDisabled: blocked\n        });\n      });\n    this.computeCurrentPrize();\n  }\n}\n\nLotteryDrawing.propTypes = {\n  addWinner: PropTypes.func.isRequired,\n  // currentPrize: PropTypes.shape(),\n};\nconst mapStateToProps = state => ({\n  allParticipants: state.dataReducer.lotteryPool.allParticipants,\n  lotteryPool: state.dataReducer.lotteryPool,\n  lotteryDrawing: state.dataReducer.lotteryDrawing\n});\nexport default connect(mapStateToProps, { addWinner })(LotteryDrawing);\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faTrashAlt, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SortableContainer, SortableElement, arrayMove, SortableHandle } from 'react-sortable-hoc';\nimport { setLottery } from '../../redux/actions/lotteryDrawing';\nconst uuidv4 = require('uuid/v4');\n\nconst DragHandle = SortableHandle(() => <FontAwesomeIcon icon={faBars} size={16} className={'drag-handle'}/>);\nconst SortableList = SortableContainer(({ items, onItemChange }) => {\n  const SortableItem = SortableElement(({ value, sortIndex }) =>\n    <div key={sortIndex} className=\"lottery-item\">\n      <DragHandle/>\n      <div className=\"lottery-item-name\">\n        <input\n          type={'text'}\n          defaultValue={value.title}\n          onBlur={e => {\n            items.find(lottery => lottery.id === value.id).title = e.target.value\n            onItemChange(items)\n          }}\n        /></div>\n      <div className=\"lottery-item-count\">\n        <input\n          type={'number'}\n          defaultValue={value.totalCount}\n          onBlur={e => {\n            items.find(lottery => lottery.id === value.id).totalCount = parseInt(e.target.value)\n            onItemChange(items)\n          }}\n        />\n      </div>\n      <div className=\"lottery-item-remove\"\n           onClick={() => {\n             items = items.filter(lottery => lottery.id !== value.id)\n             onItemChange(items)\n           }}\n      >\n        <FontAwesomeIcon\n          icon={faTrashAlt}/>\n      </div>\n    </div>\n  );\n  return (\n    <div>\n      {items.map((value, index) => (\n        <SortableItem\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          sortIndex={index}\n        />\n      ))}\n    </div>\n  );\n});\n\nclass LotteryEditableItem extends React.Component {\n\n  componentWillReceiveProps(nextProps) {\n    setTimeout(() => {\n      if (this.lotteryItemBodyRef) {\n        this.lotteryItemBodyRef.scrollTo(this.lotteryItemBodyRef.scrollHeight, this.lotteryItemBodyRef.scrollHeight);\n      }\n    }, 100)\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.setLottery(arrayMove(this.props.lotteries, oldIndex, newIndex));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={\"lottery-item-body\"} ref={el => this.lotteryItemBodyRef = el}>\n          <SortableList\n            useDragHandle\n            items={this.props.lotteries}\n            onItemChange={items => this.props.setLottery(Object.assign([], items))}\n            onSortEnd={this.onSortEnd.bind(this)}/>\n        </div>\n        <div className=\"lottery-item-add\"\n             onClick={() => {\n               const items = this.props.lotteries;\n               items.push({\n                 id: uuidv4(),\n                 title: '幸运奖',\n                 totalCount: 3,\n               })\n               this.props.setLottery(Object.assign([], items))\n             }}\n        >\n          <FontAwesomeIcon\n            icon={faPlusCircle}/>\n          添加奖项\n        </div>\n      </div>\n    )\n  }\n}\n\nLotteryEditableItem.propTypes = {\n  lotteries: PropTypes.array,\n  setLottery: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  lotteries: state.dataReducer.lotteryDrawing.setting\n});\n\nexport default connect(mapStateToProps, { setLottery })(LotteryEditableItem);\n","import Action from './_actions'\nconst setLottery = lottery => ({\n  type: Action.SET_LOTTERY_SETTING,\n  lottery\n});\n\nexport {\n  setLottery\n}","import React from \"react\";\nimport './lottery-edit.css';\nimport LotteryEditableTable from './lottery-editable-table';\n\nclass LotteryEdit extends React.Component {\n  render() {\n    return (<div>\n      <div className=\"prizes-container\">\n        <div className=\"lottery-items-header\">\n          <div className=\"lottery-item-name\">奖项</div>\n          <div className=\"lottery-item-count\">数量</div>\n        </div>\n        <LotteryEditableTable />\n      </div>\n\n    </div>)\n  }\n}\nexport default  LotteryEdit;\n\n","import React, { Component } from 'react';\nimport './lottery-setting.css'\nimport LotteryEdit from \"../lottery-edit/index\";\n\nclass LotterySetting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"lottery-setting\">\n        <header>奖项设置</header>\n        <section className=\"lottery-edit\">\n          <LotteryEdit/>\n        </section>\n        <section className={'next-btn'}>\n          <button onClick={this.next}>NEXT</button>\n        </section>\n      </div>\n    );\n  }\n\n  next = () => {\n    this.props.history.push(\"/lottery-drawing\")\n  }\n}\n\nexport default LotterySetting;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { setActivityName } from '../../redux/actions/activitySetting'\nimport './activity-setting.css'\n\nclass ActivitySetting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activityName: props.activityName\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"activity-setting\">\n        <div>\n          <header>活动名称</header>\n          <section>\n            <input defaultValue={this.props.activityName} onChange={this.onNameChange.bind(this)}/>\n          </section>\n          <section className={'next-btn'}>\n            <button disabled={!this.state.activityName} className={!this.state.activityName ? \"disable\" : ''} onClick={this.next.bind(this)}>NEXT</button>\n          </section>\n        </div>\n      </div>\n    );\n  }\n  onNameChange = (element) => {\n    this.setState({\n      activityName: element.target.value\n    })\n  };\n  next = () => {\n    this.props.setActivityName(this.state.activityName);\n    this.props.history.push(\"/lottery-pool\")\n  }\n\n}\n\nActivitySetting.propTypes = {\n  setActivityName: PropTypes.func.isRequired,\n  activityName: PropTypes.string.isRequired,\n};\nconst mapStateToProps = state => ({\n  activityName: state.dataReducer.activitySetting.name,\n});\n\nexport default connect(mapStateToProps, { setActivityName })(ActivitySetting);\n","import Action from './_actions'\nconst setActivityName = name => ({\n  type: Action.SET_ACTIVITY_NAME,\n  name\n});\nexport {\n  setActivityName\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport maskPhone from '../../utils/phone_mask';\nimport './result.css';\n\nclass Result extends Component {\n  render() {\n    return (\n      <div>\n        <div>{this.winnerList()}</div>\n      </div>\n    );\n  }\n\n  winnerList() {\n    return (<div className=\"result_part\">\n      {\n        this.props.winnerGroups.reverse().map(winnerGroup => (<div>\n          <header className=\"special_prize_result_header\">{winnerGroup.prizeName}</header>\n          {winnerGroup.winner.map(winner =>\n            (<div className=\"result_item\">\n              <div className=\"result_name\">{winner.name}</div>\n              <div className=\"result_phone\">{maskPhone(winner.phone, '****')}</div>\n            </div>)\n          )}\n\n        </div>))\n      }\n    </div>)\n  }\n}\n\nconst mapStateToProps = state => {\n  const winners = state.dataReducer.lotteryPool.winners;\n  const winnerGroups = [];\n  winners.forEach(winner => {\n    const index = winnerGroups.findIndex((winnerGroup) => winnerGroup.prizeName === winner.prize.title);\n    if (index < 0) {\n      winnerGroups.push({\n        prizeName: winner.prize.title,\n        totalCount: winner.prize.totalCount,\n        winner: [winner]\n      })\n    } else {\n      winnerGroups[index].winner.push(winner);\n    }\n\n  });\n  return {\n    winnerGroups,\n  }\n};\nexport default connect(mapStateToProps)(Result);\n","import Action from '../actions/_actions'\n\nconst initialState = () => ({\n  allParticipants: [],\n  winners: []\n});\nconst lotteryPool = (state = initialState(), action) => {\n  switch (action.type) {\n    case Action.SET_LOTTERY_POOL:\n      state.allParticipants = action.allParticipants || [];\n      break;\n    case Action.ADD_WINNER:\n      if (action.winner) {\n        state.winners.push(action.winner);\n      }\n\n  }\n  return Object.assign({}, state);\n};\n\nexport default lotteryPool\n","import Action from '../actions/_actions'\n\nconst initialState = () => ({\n  name: \"\",\n});\nconst activitySetting = (state = initialState(), action) => {\n  switch (action.type) {\n    case Action.SET_ACTIVITY_NAME:\n      state.name = action.name || \"Magpie 抽奖平台\";\n  }\n  return Object.assign({}, state);\n};\n\nexport default activitySetting","import Action from '../actions/_actions'\n\nconst uuidv4 = require('uuid/v4');\nconst initialState = () => ({\n    setting: [{\n      id: uuidv4(),\n      title: '三等奖',\n      totalCount: 3,\n    },{\n      id: uuidv4(),\n      title: '二等奖',\n      totalCount: 2,\n    },{\n      id: uuidv4(),\n      title: '一等奖',\n      totalCount: 1,\n    }]\n  }\n);\nconst lotteryDrawing = (state = initialState(), action) => {\n  switch (action.type) {\n    case Action.SET_LOTTERY_SETTING:\n      state.setting = action.lottery;\n  }\n  return Object.assign({}, state);\n};\n\nexport default lotteryDrawing","import { combineReducers } from 'redux';\nimport lotteryPool from './lotteryPool';\nimport activitySetting from './activitySetting';\nimport lotteryDrawing from './lotteryDrawing';\n\nexport default combineReducers({\n  lotteryPool,\n  activitySetting,\n  lotteryDrawing,\n});\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport dataReducer from '../reducers';\n\nconst loadState = () => {\n  const serializedState = localStorage.getItem('state');\n  return JSON.parse(serializedState);\n};\nconst composeEnhancers = composeWithDevTools({});\nconst getStore = recoverFromStorage => createStore(\n  combineReducers({\n    dataReducer,\n  }),\n  recoverFromStorage ? loadState() : undefined,\n  composeEnhancers(\n    applyMiddleware(logger),\n  ),\n);\n\nexport default getStore;\n","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Background from '../component/background';\nimport Header from '../component/header';\nimport Footer from '../component/footer';\nimport './App.css';\nimport Start from \"../component/start\";\nimport LotteryPool from \"../component/lottery-pool\";\nimport LotteryDrawing from \"../component/lottery-drawing\";\nimport LotterySetting from \"../component/lottery-setting\";\nimport ActivitySetting from \"../component/activity-setting\";\nimport Result from \"../component/result\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport getStore from \"../redux/store\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmRecovered: false,\n    }\n  }\n\n  componentDidMount() {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState && window.confirm('是否恢复上次数据？')) {\n      this.store = getStore(true)\n    } else {\n      this.store = getStore(false)\n      localStorage.removeItem('state');\n    }\n    this.setState({\n      confirmRecovered: true,\n    })\n    this.store.subscribe(() => {\n      window.onbeforeunload = (e) => {\n        const state = this.store.getState();\n        this.saveState(state);\n      };\n    })\n  }\n\n  saveState = (state) => {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Background\n          showBackground={true}\n        >\n          {!this.state.confirmRecovered ?\n            undefined\n            :\n            <Provider store={this.store}>\n              <div>\n                <Header className={'header'}/>\n                <article className={'main'}>\n                  <Switch>\n                    <Route exact path='/' component={Start}/>\n                    <Route path='/result' component={Result}/>\n                    <Route path='/lottery-drawing' component={LotteryDrawing}/>\n                    <Route path='/lottery-pool' component={LotteryPool}/>\n                    <Route path='/lottery-setting' component={LotterySetting}/>\n                    <Route path='/activity-setting' component={ActivitySetting}/>\n                    <Redirect from=\"/*\" to=\"/\"/>\n                  </Switch>\n                </article>\n                <Footer className={'footer'}/>\n              </div>\n            </Provider>\n          }\n        </Background>\n      </BrowserRouter>);\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport registerServiceWorker from './registerServiceWorker';\nReactDOM.render(<App/>, document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}